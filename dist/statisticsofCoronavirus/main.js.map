{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/countries-ser.service.ts","./src/app/countries/countries.component.ts","./src/app/countries/countries.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'statisticsofCoronavirus';\n}\n","<app-countries></app-countries>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { CountriesSerService } from './countries-ser.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountriesComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [CountriesSerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError } from \"rxjs/operators\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesSerService {\n\n  constructor(private https: HttpClient) { }\n\n  public getMultipleCountries(): Observable<any>{\n  let URL = \"\";\n  URL = \"https://corona.lmao.ninja/v2/countries/ India, Nepal, Bangladesh, Pakistan, Bhutan, Sri Lanka, Maldives\";\n  \n  return this.https.get<any>(URL).pipe(\n    catchError((error) => {\n      return throwError({\n        status: error.status,\n        error: { message: error.message },\n      });\n    })\n  );\n}\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { CountriesSerService } from '../countries-ser.service';\n/* Imports */\nimport am4themes_kelly from \"@amcharts/amcharts4/themes/kelly\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4plugins_sunburst from \"@amcharts/amcharts4/plugins/sunburst\";\n\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.scss']\n})\n\nexport class CountriesComponent implements OnInit {\n  public filteredData: any[] = [];\n\n  constructor(\n    private countService: CountriesSerService\n    \n  ) { \n    \n  }\n\n  \n  ngOnInit(): void {\n\n    this.countService.getMultipleCountries().subscribe((data) => {\n      console.log(\"after Service\",data)\n      data.forEach(element => {\n        this.filteredData.push( { name: element.country,\n                                children: [{\n                                  name:'Active', value:element.active},\n                                {name:'Death' ,value:element.deaths}, {name:'Recovered',value: element.recovered},\n                                // {name:'Total',value: element.cases}\n                              ] }\n          );\n      });\n      this.createChart();\n      console.log(this.filteredData, 'filteredData');\n    });\n   \n  }\n\n  public createChart(){\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    \n    // create chart\n    var chart = am4core.create(\"chartdiv\", am4plugins_sunburst.Sunburst);\n    this.filteredData.forEach((item,i)=>{\n      chart.data.push(item);\n    })\n   \n    console.log(chart.data,\"chart data \")\n    chart.colors.step = 2;\n    chart.fontSize = 11;\n    chart.innerRadius = am4core.percent(10);\n    \n    // define data fields\n    chart.dataFields.value = \"value\";\n    chart.dataFields.name = \"name\";\n    chart.dataFields.children = \"children\";\n    \n    \n    var level0SeriesTemplate = new am4plugins_sunburst.SunburstSeries();\n    level0SeriesTemplate.hiddenInLegend = false;\n    chart.seriesTemplates.setKey(\"0\", level0SeriesTemplate)\n    \n    // this makes labels to be hidden if they don't fit\n    level0SeriesTemplate.labels.template.truncate = false;\n    level0SeriesTemplate.labels.template.hideOversized = true;\n    \n    level0SeriesTemplate.labels.template.adapter.add(\"rotation\", (rotation, target) => {\n      target.maxWidth = target.dataItem.slice.radius - target.dataItem.slice.innerRadius - 10;\n      target.maxHeight = Math.abs(target.dataItem.slice.arc * (target.dataItem.slice.innerRadius + target.dataItem.slice.radius) / 2 * am4core.math.RADIANS);\n    \n      return rotation;\n    })\n    \n    \n    var level1SeriesTemplate = level0SeriesTemplate.clone();\n    chart.seriesTemplates.setKey(\"1\", level1SeriesTemplate)\n    level1SeriesTemplate.fillOpacity = 0.75;\n    level1SeriesTemplate.hiddenInLegend = true;\n    \n    \n    var level2SeriesTemplate = level0SeriesTemplate.clone();\n    chart.seriesTemplates.setKey(\"2\", level2SeriesTemplate)\n    level2SeriesTemplate.fillOpacity = 0.5;\n    level2SeriesTemplate.hiddenInLegend = true;\n    \n    chart.legend = new am4charts.Legend();\n\n}\n}\n","<div id=\"chartdiv\" style=\"width: 100%; height: 500px\"></div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}